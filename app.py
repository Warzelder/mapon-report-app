import streamlit as st
import datetime
import pytz # –î–ª—è —Ä–æ–±–æ—Ç–∏ –∑ —á–∞—Å–æ–≤–∏–º–∏ –ø–æ—è—Å–∞–º–∏
import pandas as pd # –î–ª—è —Ä–æ–±–æ—Ç–∏ –∑ DataFrame
from io import BytesIO # –î–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è Excel –≤ –ø–∞–º'—è—Ç—å

# –Ü–º–ø–æ—Ä—Ç—É—î–º–æ –Ω–∞—à—É –ª–æ–≥—ñ–∫—É –∑ —Ñ–∞–π–ª—É mapon_api_client.py
from mapon_api_client import get_fleet_odometer_and_fuel_data

# --- –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è Streamlit —Å—Ç–æ—Ä—ñ–Ω–∫–∏ ---
st.set_page_config(
    page_title="–ó–≤—ñ—Ç –∞–≤—Ç–æ–ø–∞—Ä–∫—É Mapon",
    page_icon="üöó",
    layout="wide" # –†–æ–±–∏–º–æ —Å—Ç–æ—Ä—ñ–Ω–∫—É —à–∏—Ä–æ–∫–æ—é –¥–ª—è –∫—Ä–∞—â–æ–≥–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—å
)

# –ö–æ—Ä–∏—Å—Ç—É–≤–∞—Ü—å–∫—ñ CSS –¥–ª—è —Å—Ç–∏–ª—ñ–∑–∞—Ü—ñ—ó
st.markdown("""
    <style>
    /* –û—Å–Ω–æ–≤–Ω–∏–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –≤—ñ–¥—Å—Ç—É–ø—ñ–≤ —Ç–∞ —Ñ–æ–Ω—É */
    .main .block-container {
        padding-top: 2rem;
        padding-right: 2rem;
        padding-left: 2rem;
        padding-bottom: 2rem;
        background-color: #f8f8f8; /* –î—É–∂–µ —Å–≤—ñ—Ç–ª–æ-—Å—ñ—Ä–∏–π —Ñ–æ–Ω –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç—É, —è–∫ –Ω–∞ Mapon */
    }

    /* –°—Ç–∏–ª—å –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫—ñ–≤ H1 */
    h1 {
        color: #333333; /* –¢–µ–º–Ω–æ-—Å—ñ—Ä–∏–π/–º–∞–π–∂–µ —á–æ—Ä–Ω–∏–π */
        font-family: 'Arial', sans-serif;
        border-bottom: none; /* –ü—Ä–∏–±–µ—Ä–µ–º–æ –Ω–∏–∂–Ω—é –ª—ñ–Ω—ñ—é –¥–ª—è H1 */
        margin-bottom: 1.5rem; /* –ó–±—ñ–ª—å—à–∏–º–æ –≤—ñ–¥—Å—Ç—É–ø –ø—ñ—Å–ª—è H1 */
    }
    /* –°—Ç–∏–ª—å –¥–ª—è –≤—Å—ñ—Ö —ñ–Ω—à–∏—Ö –∑–∞–≥–æ–ª–æ–≤–∫—ñ–≤ (H2, H3, H4, H5, H6) */
    h2, h3, h4, h5, h6 {
        color: #333333; /* –¢–µ–º–Ω–æ-—Å—ñ—Ä–∏–π/–º–∞–π–∂–µ —á–æ—Ä–Ω–∏–π, —è–∫ –Ω–∞ Mapon */
        font-family: 'Arial', sans-serif;
        border-bottom: 1px solid #e0e0e0; /* –õ–µ–≥–∫–∞ –ª—ñ–Ω—ñ—è –ø—ñ–¥ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏ */
        padding-bottom: 0.5rem;
        margin-bottom: 1rem;
    }

    /* –°—Ç–∏–ª—å –¥–ª—è –∫–Ω–æ–ø–æ–∫ */
    .stButton>button {
        background-color: #7ab800; /* –ö–æ–ª—ñ—Ä Mapon */
        color: white;
        border-radius: 4px;
        border: none;
        padding: 10px 20px;
        font-size: 16px;
        font-weight: bold;
        box-shadow: 0 2px 4px rgba(0,0,0,0.2);
        transition: background-color 0.2s ease, box-shadow 0.2s ease; /* –ü–ª–∞–≤–Ω–∏–π –ø–µ—Ä–µ—Ö—ñ–¥ */
    }
    .stButton>button:hover {
        background-color: #6aaa00; /* –¢–µ–º–Ω—ñ—à–∏–π –∑–µ–ª–µ–Ω–∏–π –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–Ω—ñ */
        color: white;
        box-shadow: 0 4px 8px rgba(0,0,0,0.2);
    }

    /* –°—Ç–∏–ª—å –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤–∏—Ö –ø–æ–ª—ñ–≤ (API Key) —Ç–∞ —ñ–Ω—à–∏—Ö input-—ñ–≤ */
    .stTextInput label, .stDateInput label, .stTimeInput label, .stMultiSelect label, .stSelectbox label {
        color: #555555; /* –¢–µ–º–Ω—ñ—à–∏–π –∫–æ–ª—ñ—Ä –¥–ª—è –Ω–∞–∑–≤–∏ –ø–æ–ª—è */
        font-size: 1rem;
        font-weight: bold;
        margin-bottom: 0.25rem; /* –ó–º–µ–Ω—à–∏–º–æ –≤—ñ–¥—Å—Ç—É–ø –º—ñ–∂ –ª–µ–π–±–ª–æ–º —Ç–∞ –ø–æ–ª–µ–º */
        display: block; /* –ó–∞–±–µ–∑–ø–µ—á–∏–º–æ, —â–æ–± –ª–µ–π–±–ª –∑–∞–π–º–∞–≤ —Å–≤—ñ–π —Ä—è–¥–æ–∫ */
    }
    .stTextInput div[data-baseweb="input"] input,
    .stDateInput div[data-baseweb="input"] input,
    .stTimeInput div[data-baseweb="input"] input,
    .stSelectbox div[data-baseweb="select"] { /* –î–æ–±–∞–≤–ª–µ–Ω–æ –¥–ª—è Selectbox */
        border: 1px solid #b0b0b0; /* –¢—Ä–æ—Ö–∏ —Ç–µ–º–Ω—ñ—à–∞ —Ä–∞–º–∫–∞ –¥–ª—è –∫—Ä–∞—â–æ–≥–æ –∫–æ–Ω—Ç—Ä–∞—Å—Ç—É */
        border-radius: 4px;
        padding: 0.5rem 1rem;
        font-size: 1rem;
        color: #333333;
        box-shadow: inset 0 1px 3px rgba(0,0,0,0.1); /* –í–Ω—É—Ç—Ä—ñ—à–Ω—è —Ç—ñ–Ω—å –¥–ª—è –µ—Ñ–µ–∫—Ç—É –≥–ª–∏–±–∏–Ω—ã */
    }
    .stTextInput div[data-baseweb="input"]:focus-within,
    .stDateInput div[data-baseweb="input"]:focus-within,
    .stTimeInput div[data-baseweb="input"]:focus-within,
    .stSelectbox div[data-baseweb="select"]:focus-within { /* –î–æ–±–∞–≤–ª–µ–Ω–æ –¥–ª—è Selectbox */
        border-color: #7ab800; /* –ó–µ–ª–µ–Ω–∞ —Ä–∞–º–∫–∞ –ø—Ä–∏ —Ñ–æ–∫—É—Å—ñ */
        box-shadow: 0 0 0 0.1rem rgba(122, 184, 0, 0.25); /* –õ–µ–≥–∫–∞ –∑–µ–ª–µ–Ω–∞ —Ç—ñ–Ω—å –ø—Ä–∏ —Ñ–æ–∫—É—Å—ñ */
    }

    /* –°—Ç–∏–ª—ñ–∑–∞—Ü—ñ—è –º—É–ª—å—Ç–∏—Å–µ–ª–µ–∫—Ç–∞ */
    /* –û—Å–Ω–æ–≤–Ω–∏–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –º—É–ª—å—Ç–∏—Å–µ–ª–µ–∫—Ç–∞ */
    .stMultiSelect div[data-baseweb="select"] {
        border: 1px solid #b0b0b0; /* –†–∞–º–∫–∞ –¥–ª—è –≤—Å—å–æ–≥–æ –≤—ñ–¥–∂–µ—Ç–∞ */
        border-radius: 4px;
        box-shadow: inset 0 1px 3px rgba(0,0,0,0.1);
    }
    /* –ö–æ–ª—ñ—Ä —Ñ–æ–Ω—É –¥–ª—è –≤–∏–±—Ä–∞–Ω–∏—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ (–∫–æ–ª–æ–Ω–æ–∫) */
    .stMultiSelect span[data-baseweb="tag"] {
        background-color: #eafbe1 !important; /* –î—É–∂–µ —Å–≤—ñ—Ç–ª–∏–π –∑–µ–ª–µ–Ω–∏–π */
        color: #388e3c !important; /* –¢–µ–º–Ω–æ-–∑–µ–ª–µ–Ω–∏–π —Ç–µ–∫—Å—Ç */
        border: 1px solid #7ab800 !important; /* –ó–µ–ª–µ–Ω–∞ —Ä–∞–º–∫–∞ */
        border-radius: 4px !important;
        font-size: 0.75rem !important;
        padding: 4px 8px !important;
        margin: 2px !important;
    }
    /* –ö–æ–ª—ñ—Ä —ñ–∫–æ–Ω–∫–∏ –∑–∞–∫—Ä–∏—Ç—Ç—è –≤–∏–±—Ä–∞–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ */
    .stMultiSelect span[data-baseweb="tag"] svg {
        fill: #388e3c !important;
    }
    /* –ö–æ–ª—ñ—Ä —Ñ–æ–Ω—É –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–Ω—ñ –Ω–∞ –æ–ø—Ü—ñ—é —É –≤–∏–ø–∞–¥–∞—é—á–æ–º—É —Å–ø–∏—Å–∫—É */
    div[role="option"]:hover {
        background-color: #f0f8ed !important; /* –°–≤—ñ—Ç–ª–æ-–∑–µ–ª–µ–Ω–∏–π –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–Ω—ñ */
    }
    /* –ö–æ–ª—ñ—Ä —Ç–µ–∫—Å—Ç—É –æ–ø—Ü—ñ—ó —É –≤–∏–ø–∞–¥–∞—é—á–æ–º—É —Å–ø–∏—Å–∫—É */
    div[role="option"] span {
        color: #333333 !important;
    }
    /* –ó–º–µ–Ω—à—É—î–º–æ —à—Ä–∏—Ñ—Ç –¥–ª—è –≤–∏–±—Ä–∞–Ω–∏—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –≤ –ø–æ–ª—ñ –º—É–ª—å—Ç–∏—Å–µ–ª–µ–∫—Ç–∞ (–¥—É–±–ª—é—î–º–æ, –±–æ —Å–ø–µ—Ü–∏—Ñ—ñ—á–Ω—ñ—Å—Ç—å) */
    div[data-baseweb="select"] span.css-1n74gkj {
        font-size: 0.75rem !important;
    }
    /* –ó–º–µ–Ω—à—É—î–º–æ —à—Ä–∏—Ñ—Ç –¥–ª—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ —É –≤–∏–ø–∞–¥–∞—é—á–æ–º—É —Å–ø–∏—Å–∫—É –º—É–ª—å—Ç–∏—Å–µ–ª–µ–∫—Ç–∞ (–¥—É–±–ª—é—î–º–æ) */
    div[data-baseweb="select"] div.css-1n74gkj {
        font-size: 0.75rem !important;
    }
    /* –ö–Ω–æ–ø–∫–∞ —Ä–æ–∑–∫—Ä–∏—Ç—Ç—è –º—É–ª—å—Ç–∏—Å–µ–ª–µ–∫—Ç–∞ (—Å—Ç—Ä—ñ–ª–æ—á–∫–∞) */
    div[data-testid="stMultiSelect"] div[role="button"] {
        border-color: #7ab800 !important; /* –ó–µ–ª–µ–Ω–∞ —Ä–∞–º–∫–∞ –Ω–∞–≤–∫–æ–ª–æ –∫–Ω–æ–ø–∫–∏ —Ä–æ–∑–∫—Ä–∏—Ç—Ç—è */
    }

    /* –°—Ç–∏–ª—ñ–∑–∞—Ü—ñ—è —Ç–µ–∫—Å—Ç—É –≤ –ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è—Ö —Ç–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó (–∑–±—ñ–ª—å—à–µ–Ω–∏–π –∫–æ–Ω—Ç—Ä–∞—Å—Ç) */
    .stAlert {
        font-size: 14px;
        border-radius: 4px;
        padding: 10px 15px; /* –ë—ñ–ª—å—à—ñ –≤—ñ–¥—Å—Ç—É–ø–∏ */
        margin-top: 1rem;
        margin-bottom: 1rem;
    }
    .stAlert.st-ee { /* –î–ª—è info */
        background-color: #e6f7ff;
        color: #0056b3;
        border-left: 5px solid #2196f3;
    }
    .stAlert.st-eb { /* –î–ª—è success */
        background-color: #eafbe1;
        color: #388e3c;
        border-left: 5px solid #4caf50;
    }
    .stAlert.st-dd { /* –î–ª—è warning */
        background-color: #fff9e6;
        color: #e65100;
        border-left: 5px solid #ff9800;
    }
    .stAlert.st-cc { /* –î–ª—è error */
        background-color: #ffe6e6;
        color: #d32f2f;
        border-left: 5px solid #f44336;
    }

    /* –ó–º–µ–Ω—à–µ–Ω–Ω—è —à—Ä–∏—Ñ—Ç—É –≤ —Ç–∞–±–ª–∏—Ü—ñ DataFrame —Ç–∞ –ø–æ–∫—Ä–∞—â–µ–Ω–Ω—è –∫–æ–Ω—Ç—Ä–∞—Å—Ç—É */
    .stDataFrame {
        font-size: 0.75rem !important;
        border: 1px solid #e0e0e0;
        border-radius: 4px;
        box-shadow: 0 1px 3px rgba(0,0,0,0.1);
        margin-top: 1.5rem; /* –í—ñ–¥—Å—Ç—É–ø –≤—ñ–¥ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ */
    }
    .stDataFrame table {
        font-size: 0.75rem !important;
        width: 100%;
        border-collapse: collapse; /* –ü—Ä–∏–±–µ—Ä–µ–º–æ –ø–æ–¥–≤—ñ–π–Ω—ñ –º–µ–∂—ñ */
    }
    .stDataFrame th, .stDataFrame td {
        font-size: 0.75rem !important;
        padding: 8px 12px;
        border-bottom: 1px solid #eeeeee; /* –õ–µ–≥–∫–∞ –º–µ–∂–∞ –º—ñ–∂ —Ä—è–¥–∫–∞–º–∏ */
        text-align: left;
    }
    .stDataFrame th {
        background-color: #f0f0f0;
        color: #555555;
        font-weight: bold;
        border-bottom: 2px solid #e0e0e0;
    }
    .stDataFrame tr:nth-child(even) {
        background-color: #f9f9f9;
    }
    .stDataFrame tr:hover {
        background-color: #e8f5e9;
    }
    
    /* –°—Ç–∏–ª—ñ–∑–∞—Ü—ñ—è –±—ñ—á–Ω–æ—ó –ø–∞–Ω–µ–ª—ñ (—è–∫—â–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è) */
    .st-emotion-cache-vk33z2 { /* –¶–µ–π –∫–ª–∞—Å –º–æ–∂–µ –∑–º—ñ–Ω—é–≤–∞—Ç–∏—Å—è –≤ –º–∞–π–±—É—Ç–Ω—ñ—Ö –≤–µ—Ä—Å—ñ—è—Ö Streamlit */
        background-color: #212121; /* –î—É–∂–µ —Ç–µ–º–Ω–∏–π —Å—ñ—Ä–∏–π/–º–∞–π–∂–µ —á–æ—Ä–Ω–∏–π, —è–∫ –Ω–∞ Mapon */
        color: #ffffff; /* –ë—ñ–ª–∏–π —Ç–µ–∫—Å—Ç –Ω–∞ –±—ñ—á–Ω—ñ–π –ø–∞–Ω–µ–ª—ñ */
    }
    .st-emotion-cache-vk33z2 .st-emotion-cache-1pxe4x4 {
        color: #dddddd; /* –°–≤—ñ—Ç–ª–æ-—Å—ñ—Ä–∏–π –¥–ª—è –∑–≤–∏—á–∞–π–Ω–∏—Ö –ø–æ—Å–∏–ª–∞–Ω—å */
    }
    .st-emotion-cache-vk33z2 .st-emotion-cache-1pxe4x4:hover {
        color: #7ab800; /* –ó–µ–ª–µ–Ω–∏–π –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–Ω—ñ */
    }
    .st-emotion-cache-vk33z2 .st-emotion-cache-1pxe4x4.active {
        color: #7ab800; /* –ê–∫—Ç–∏–≤–Ω–∏–π –ø—É–Ω–∫—Ç –∑–µ–ª–µ–Ω–∏–º */
        font-weight: bold;
    }
    </style>
    """, unsafe_allow_html=True)


st.title("üå± –ó–≤—ñ—Ç –∞–≤—Ç–æ–ø–∞—Ä–∫—É Mapon")
st.markdown("–¢—É—Ç –≤–∏ –º–æ–∂–µ—Ç–µ –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–µ—Ç–∞–ª—å–Ω–∏–π –∑–≤—ñ—Ç —â–æ–¥–æ –æ–¥–æ–º–µ—Ç—Ä–∞ —Ç–∞ –≤–∏—Ç—Ä–∞—Ç –ø–∞–ª—å–Ω–æ–≥–æ –≤–∞—à–æ–≥–æ –∞–≤—Ç–æ–ø–∞—Ä–∫—É –∑–∞ –æ–±—Ä–∞–Ω–∏–π –ø–µ—Ä—ñ–æ–¥.")

# --- –í–≤–µ–¥–µ–Ω–Ω—è API –∫–ª—é—á–∞ ---
api_key = st.text_input("–í–≤–µ–¥—ñ—Ç—å –≤–∞—à Mapon API Key", type="password")

# –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –≤–≤–µ–¥–µ–Ω–æ API –∫–ª—é—á
if not api_key:
    st.warning("–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –≤–∞—à Mapon API Key –¥–ª—è –ø—Ä–æ–¥–æ–≤–∂–µ–Ω–Ω—è.")
    st.stop()

# --- –í–∏–±—ñ—Ä –¥—ñ–∞–ø–∞–∑–æ–Ω—É –¥–∞—Ç —Ç–∞ —á–∞—Å—É ---
st.header("–û–±–µ—Ä—ñ—Ç—å –ø–µ—Ä—ñ–æ–¥ –¥–ª—è –∑–≤—ñ—Ç—É")

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è session_state –¥–ª—è –≤—Ä–µ–º–µ–Ω–∏
def update_start_time():
    st.session_state['start_time_value'] = st.session_state['start_time_input_key']

def update_end_time():
    st.session_state['end_time_value'] = st.session_state['end_time_input_key']

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è session_state –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –∏ —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞
if 'start_time_value' not in st.session_state:
    st.session_state['start_time_value'] = datetime.time(0, 0, 0)
if 'end_time_value' not in st.session_state:
    st.session_state['end_time_value'] = datetime.time(23, 59, 59)

# –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —á–∞—Å–æ–≤—ã—Ö –ø–æ—è—Å–æ–≤ –∏–∑ pytz
all_timezones = sorted(pytz.all_timezones)

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é. –ü–æ–ø—Ä–æ–±—É–µ–º —É–≥–∞–¥–∞—Ç—å –º–µ—Å—Ç–Ω—ã–π, –∏–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–∏–º –ö–∏–µ–≤.
default_timezone = "Europe/Kiev" # –ù–∞—á–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
try:
    # –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–∏—Ç—å –ª–æ–∫–∞–ª—å–Ω—ã–π —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    import tzlocal
    local_tz = tzlocal.get_localzone().zone
    if local_tz in all_timezones:
        default_timezone = local_tz
except Exception:
    pass # –ï—Å–ª–∏ tzlocal –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª –∏–ª–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –æ—Å—Ç–∞–≤–∏–º default_timezone

if 'selected_timezone' not in st.session_state:
    st.session_state['selected_timezone'] = default_timezone

# –í–∏–¥–∂–µ—Ç –≤—ã–±–æ—Ä–∞ —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞
selected_timezone_str = st.selectbox(
    "–û–±–µ—Ä—ñ—Ç—å –≤–∞—à —á–∞—Å–æ–≤–∏–π –ø–æ—è—Å:",
    options=all_timezones,
    index=all_timezones.index(st.session_state['selected_timezone']), # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    key="timezone_select_key",
    help="–í—Å—ñ –¥–∞—Ç–∏ —Ç–∞ —á–∞—Å –Ω–∏–∂—á–µ –±—É–¥—É—Ç—å —ñ–Ω—Ç–µ—Ä–ø—Ä–µ—Ç—É–≤–∞—Ç–∏—Å—è —É –≤–∏–±—Ä–∞–Ω–æ–º—É —á–∞—Å–æ–≤–æ–º—É –ø–æ—è—Å—ñ, –∞ –ø–æ—Ç—ñ–º –∫–æ–Ω–≤–µ—Ä—Ç–æ–≤–∞–Ω—ñ –≤ UTC –¥–ª—è Mapon API."
)
# –û–±–Ω–æ–≤–ª—è–µ–º session_state –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞
st.session_state['selected_timezone'] = selected_timezone_str

# –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞ –∏–∑ –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
try:
    local_tz_object = pytz.timezone(selected_timezone_str)
except pytz.UnknownTimeZoneError:
    st.error(f"–ü–æ–º–∏–ª–∫–∞: –ù–µ–≤—ñ–¥–æ–º–∏–π —á–∞—Å–æ–≤–∏–π –ø–æ—è—Å '{selected_timezone_str}'. –ë—É–¥—å –ª–∞—Å–∫–∞, –æ–±–µ—Ä—ñ—Ç—å —ñ–Ω—à–∏–π.")
    st.stop()

# –¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞ –≤ –º–µ—Å—Ç–Ω–æ–º —á–∞—Å–æ–≤–æ–º –ø–æ—è—Å–µ
now_local_datetime = datetime.datetime.now(local_tz_object)
default_start_date = (now_local_datetime - datetime.timedelta(days=1)).date()
default_end_date = now_local_datetime.date()


col1, col2 = st.columns(2)
with col1:
    start_date = st.date_input("–î–∞—Ç–∞ –ø–æ—á–∞—Ç–∫—É (–æ–±—Ä–∞–Ω–∏–π —á–∞—Å–æ–≤–∏–π –ø–æ—è—Å)", value=default_start_date)
    start_time_selected = st.time_input(
        "–ß–∞—Å –ø–æ—á–∞—Ç–∫—É (–æ–±—Ä–∞–Ω–∏–π —á–∞—Å–æ–≤–∏–π –ø–æ—è—Å)",
        value=st.session_state['start_time_value'],
        step=300, # –®–∞–≥ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö (300 —Å–µ–∫—É–Ω–¥ = 5 –º–∏–Ω—É—Ç)
        key="start_time_input_key", # –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–ª—é—á –¥–ª—è –≤–∏–¥–∂–µ—Ç–∞
        on_change=update_start_time # –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏
    )

with col2:
    end_date = st.date_input("–î–∞—Ç–∞ –∑–∞–∫—ñ–Ω—á–µ–Ω–Ω—è (–æ–±—Ä–∞–Ω–∏–π —á–∞—Å–æ–≤–∏–π –ø–æ—è—Å)", value=default_end_date)
    end_time_selected = st.time_input(
        "–ß–∞—Å –∑–∞–∫—ñ–Ω—á–µ–Ω–Ω—è (–æ–±—Ä–∞–Ω–∏–π —á–∞—Å–æ–≤–∏–π –ø–æ—è—Å)",
        value=st.session_state['end_time_value'],
        step=300, # –®–∞–≥ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö (300 —Å–µ–∫—É–Ω–¥ = 5 –º–∏–Ω—É—Ç)
        key="end_time_input_key", # –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–ª—é—á –¥–ª—è –≤–∏–¥–∂–µ—Ç–∞
        on_change=update_end_time # –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏
    )

# --- –ö–û–ù–í–ï–†–¢–ê–¶–ò–Ø –õ–û–ö–ê–õ–¨–ù–û–ì–û –í–†–ï–ú–ï–ù–ò –í UTC ---
# 1. –û–±—ä–µ–¥–∏–Ω—è–µ–º –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –±–µ–∑ —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞ (naive datetime)
start_datetime_naive = datetime.datetime.combine(start_date, start_time_selected)
end_datetime_naive = datetime.datetime.combine(end_date, end_time_selected)

# 2. –î–µ–ª–∞–µ–º naive datetime "aware" –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º —á–∞—Å–æ–≤–æ–º –ø–æ—è—Å–µ
start_datetime_local = local_tz_object.localize(start_datetime_naive, is_dst=None)
end_datetime_local = local_tz_object.localize(end_datetime_naive, is_dst=None)

# 3. –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –ª–æ–∫–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–µ datetime –≤ UTC
start_datetime_full = start_datetime_local.astimezone(pytz.utc)
end_datetime_full = end_datetime_local.astimezone(pytz.utc)

# –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –¥–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ –Ω–µ –ø–æ–∑–¥–Ω–µ–µ –¥–∞—Ç—ã –æ–∫–æ–Ω—á–∞–Ω–∏—è
if start_datetime_full > end_datetime_full:
    st.error("–ü–æ–º–∏–ª–∫–∞: –î–∞—Ç–∞ —Ç–∞ —á–∞—Å –ø–æ—á–∞—Ç–∫—É –ø–µ—Ä—ñ–æ–¥—É –Ω–µ –º–æ–∂–µ –±—É—Ç–∏ –ø—ñ–∑–Ω—ñ—à–µ –¥–∞—Ç–∏ —Ç–∞ —á–∞—Å—É –∑–∞–∫—ñ–Ω—á–µ–Ω–Ω—è.")
    st.stop()

# --- –†–∞–∑–¥–µ–ª –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Ç—á–µ—Ç–∞ (–≤—ã–±–æ—Ä –∫–æ–ª–æ–Ω–æ–∫) ---
st.header("–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑–≤—ñ—Ç—É")

# –ù–∞–∑–≤–∞–Ω–∏—è –∫–æ–ª–æ–Ω–æ–∫ –¥–æ–ª–∂–Ω—ã —Ç–æ—á–Ω–æ —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å —Ç–µ–º, —á—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç get_fleet_odometer_and_fuel_data –≤ mapon_api_client.py
all_possible_columns = [
    '–ù–æ–º–µ—Ä –ê–≤—Ç–æ–º–æ–±—ñ–ª—è',
    '–û–¥–æ–º–µ—Ç—Ä CAN (–ø–æ—á–∞—Ç–æ–∫)',
    '–û–¥–æ–º–µ—Ç—Ä CAN (–∫—ñ–Ω–µ—Ü—å)',
    '–ü—Ä–æ–±—ñ–≥ (CAN, –∫–º)',
    '–ü–∞–ª–∏–≤–æ –≤ –±–∞–∫—É (–ø–æ—á–∞—Ç–æ–∫, –ª)',
    '–ü–∞–ª–∏–≤–æ –≤ –±–∞–∫—É (–∫—ñ–Ω–µ—Ü—å, –ª)',
    '–ó–∞–ø—Ä–∞–≤–ª–µ–Ω–æ –∑–∞ –ø–µ—Ä—ñ–æ–¥ (–ª)',
    '–ó–ª–∏–≤–∏ –∑–∞ –ø–µ—Ä—ñ–æ–¥ (–ª)',
    '–í–∏—Ç—Ä–∞—Ç–∞ (–¥–∞—Ç—á–∏–∫, –ª)',
    '–°–µ—Ä–µ–¥–Ω—è –≤–∏—Ç—Ä–∞—Ç–∞ (–ª/100–∫–º)'
]

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è session_state –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –∫–æ–ª–æ–Ω–æ–∫
if 'selected_columns_value' not in st.session_state:
    st.session_state['selected_columns_value'] = all_possible_columns # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤—Å–µ –∫–æ–ª–æ–Ω–∫–∏

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è session_state –¥–ª—è –∫–æ–ª–æ–Ω–æ–∫
def update_selected_columns():
    st.session_state['selected_columns_value'] = st.session_state['multiselect_columns_key']

selected_columns = st.multiselect(
    "–û–±–µ—Ä—ñ—Ç—å –∫–æ–ª–æ–Ω–∫–∏ –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —É –∑–≤—ñ—Ç—ñ:",
    options=all_possible_columns,
    default=st.session_state['selected_columns_value'],
    key="multiselect_columns_key", # –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–ª—é—á
    on_change=update_selected_columns # –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏
)

if not selected_columns:
    st.warning("–ë—É–¥—å –ª–∞—Å–∫–∞, –æ–±–µ—Ä—ñ—Ç—å —Ö–æ—á–∞ –± –æ–¥–Ω—É –∫–æ–ª–æ–Ω–∫—É –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è.")
    st.stop()


# --- –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –æ—Ç—á–µ—Ç–∞ ---
st.write("")
if st.button("–ó–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ –∑–≤—ñ—Ç", help="–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å, —â–æ–± –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–∞–Ω—ñ –∑ Mapon"):
    st.info(f"–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –¥–ª—è –ø–µ—Ä—ñ–æ–¥—É –∑ {start_datetime_local.strftime('%Y-%m-%d %H:%M:%S %Z%z')} –ø–æ {end_datetime_local.strftime('%Y-%m-%d %H:%M:%S %Z%z')}... (–¶–µ {start_datetime_full.strftime('%Y-%m-%d %H:%M:%S UTC')} –ø–æ {end_datetime_full.strftime('%Y-%m-%d %H:%M:%S UTC')} —É UTC).")

    # –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–∞—à—É –æ—Å–Ω–æ–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ mapon_api_client.py
    with st.spinner('–û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∑ Mapon API...'):
        try:
            df = get_fleet_odometer_and_fuel_data(api_key, start_datetime_full, end_datetime_full)
            
            if not df.empty:
                st.success("–î–∞–Ω—ñ —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ!")
                st.write("")
                
                # –§–∏–ª—å—Ç—Ä—É–µ–º DataFrame –ø–æ –≤—ã–±—Ä–∞–Ω–Ω—ã–º –∫–æ–ª–æ–Ω–∫–∞–º
                columns_to_show = [col for col in selected_columns if col in df.columns]
                
                if not columns_to_show:
                    st.warning("–û–±—Ä–∞–Ω—ñ –∫–æ–ª–æ–Ω–∫–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ –æ—Ç—Ä–∏–º–∞–Ω–∏—Ö –¥–∞–Ω–∏—Ö. –í—ñ–¥–æ–±—Ä–∞–∂–∞—é –≤—Å—ñ –¥–æ—Å—Ç—É–ø–Ω—ñ –∫–æ–ª–æ–Ω–∫–∏.")
                    st.dataframe(df.style.highlight_null(), use_container_width=True)
                else:
                    st.subheader("–†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –∑–≤—ñ—Ç—É")
                    df_display = df[columns_to_show]
                    st.dataframe(df_display.style.highlight_null(), use_container_width=True)

                # --- –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ Excel ---
                st.write("")
                st.subheader("–ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∑–≤—ñ—Ç")
                
                @st.cache_data
                def convert_df_to_excel(df_to_convert):
                    output = BytesIO()
                    with pd.ExcelWriter(output, engine='xlsxwriter') as writer:
                        df_to_convert.to_excel(writer, index=False, sheet_name='–ó–≤—ñ—Ç –ø–æ –∞–≤—Ç–æ–ø–∞—Ä–∫—É')
                        worksheet = writer.sheets['–ó–≤—ñ—Ç –ø–æ –∞–≤—Ç–æ–ø–∞—Ä–∫—É']
                        for i, col in enumerate(df_to_convert.columns):
                            max_len = max(df_to_convert[col].astype(str).map(len).max(), len(col)) + 2
                            worksheet.set_column(i, i, max_len)
                    processed_data = output.getvalue()
                    return processed_data

                excel_data = convert_df_to_excel(df_display)
                st.download_button(
                    label="üì• –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∑–≤—ñ—Ç —É Excel",
                    data=excel_data,
                    file_name=f"Mapon_–ó–≤—ñ—Ç_–ê–≤—Ç–æ–ø–∞—Ä–∫—É_{start_date.strftime('%Y%m%d')}_{end_date.strftime('%Y%m%d')}.xlsx",
                    mime="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
                )
                
            else:
                st.warning("–ó–≤—ñ—Ç –Ω–µ –º—ñ—Å—Ç–∏—Ç—å –¥–∞–Ω–∏—Ö. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –æ–±—Ä–∞–Ω–∏–π –ø–µ—Ä—ñ–æ–¥ –∞–±–æ –ø–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—å, —â–æ Mapon API –ø–æ–≤–µ—Ä–Ω—É–≤ –¥–∞–Ω—ñ –¥–ª—è –∞–∫—Ç–∏–≤–Ω–∏—Ö —é–Ω—ñ—Ç—ñ–≤.")
        
        except Exception as e:
            st.error(f"–í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ –¥–∞–Ω–∏—Ö: {e}. –ë—É–¥—å –ª–∞—Å–∫–∞, –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ API Key —Ç–∞ —Å–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.")
            st.exception(e)